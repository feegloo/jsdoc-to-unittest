// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parser happy path works 1`] = `
Array [
  Object {
    "code": "contains('foo', 'fooo'); // false",
    "name": "contains",
    "result": false,
    "type": "value",
  },
  Object {
    "code": "contains('hey', 'ey'); // true;",
    "name": "contains",
    "result": true,
    "type": "value",
  },
]
`;

exports[`Parser multiline examples 1`] = `
Array [
  Object {
    "code": "easy.utils.each([1, 2, 3], function (value, index) {
    easy.console.log(index, value);
});",
    "name": "each",
    "result": "",
    "type": "default",
  },
  Object {
    "code": "easy.utils.each({foo: 'bar', baz: 'bar'}, function (value, key) {
    easy.console.log(key, value);
});",
    "name": "each",
    "result": "",
    "type": "default",
  },
  Object {
    "code": "var utils = {
    power: function (base, exponent) {
        return Math.pow(base, exponent);
    }
};

easy.utils.each([1, 2, 3], function (value, index) {
    // \\"this\\" references the utils object where the function \\"power\\" is available
    easy.console.log(index, value, this.power(value));
}, utils);",
    "name": "each",
    "result": "",
    "type": "default",
  },
  Object {
    "code": "easy.utils.each({foo: 'bar', baz: 'bar'}, function (value, key) {
    // \\"this\\" references the global object where the built-in String object is available
    easy.console.log(key, value, this.String.prototype.toUpperCase.call(value));
});",
    "name": "each",
    "result": "",
    "type": "default",
  },
]
`;

exports[`Parser supports async 1`] = `
Object {
  "exports": Array [
    "function getFromURL(str) {
    return fetch(str);
}",
  ],
  "imports": Array [
    "getFromURL",
  ],
  "samples": Array [
    Sample {
      "examples": Array [
        Object {
          "async": true,
          "code": "getFromURL('https://mail.google.com/mail/')
  .then(response => response.slice(5).trim()); // \\"world\\"",
          "mocks": Object {
            "fetch('string')": "hello world  ",
          },
          "name": "getFromURL",
          "result": "world",
          "type": "value",
        },
      ],
      "name": "getFromURL",
      "tags": Object {
        "async": Array [
          Object {
            "description": null,
            "title": "async",
          },
        ],
        "example": Array [
          Object {
            "description": "getFromURL('https://mail.google.com/mail/')
  .then(response => response.slice(5).trim()); // \\"world\\"",
            "title": "example",
          },
        ],
        "mock": Array [
          Object {
            "description": "{ 'fetch(\\\\'string\\\\')': 'hello world  ' }",
            "title": "mock",
          },
        ],
        "name": Array [
          Object {
            "description": null,
            "name": "getFromURL",
            "title": "name",
          },
        ],
        "param": Array [
          Object {
            "description": null,
            "name": "str1",
            "title": "param",
            "type": null,
          },
          Object {
            "description": null,
            "name": "str2",
            "title": "param",
            "type": null,
          },
        ],
        "return": Array [
          Object {},
        ],
        "returns": Array [
          Object {
            "description": null,
            "title": "returns",
            "type": Object {
              "elements": Array [
                Object {
                  "type": "AllLiteral",
                },
                Object {
                  "name": "boolean",
                  "type": "NameExpression",
                },
              ],
              "type": "UnionType",
            },
          },
        ],
      },
    },
  ],
}
`;
